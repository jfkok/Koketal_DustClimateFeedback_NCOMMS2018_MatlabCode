function regional_dust_DRE (j_end)

%main script, which calculates the regional dust climate feedback using kappa calculated from CMIP5 and CESM/CLM, the global DRE from Kok et al. (Nature Geoscience, 2017), and four global model (CESM, GISS, GEOS-Chem and WRF-Chem) simulations of how that global dust DRE is distributed across the planet.

load('Model_AOD_per_bin.mat'); %contains the global DAOD for each model bin, as constrained in Kok et al. (Nature Geoscience, 2017). This data is generated by main_bootstrap_global_dust_cycle, which is a script used by Kok et al. (Nature Geoscience, 2017) and also archived with that paper; contains 'DRE_bin_AOD','DRE_bin_AOD_PM20','rho_d','tau_d_bootstrap'
load('REE.mat'); %the radiative effect efficiency for each bin of each of the four models. This data is generated by write_REE, which is a script used by Kok et al. (Nature Geoscience, 2017) and also archived with that paper. k = 1 = CESM, 2 = GISS, 3 = GEOS-Chem, 4 = WRF-Chem; contains D_DRE_lower','D_DRE_upper','DRE_DAOD','SW_REE_TOA','LW_REE_TOA','SW_REE_surf','LW_REE_surf','SW_REE_atm','LW_REE_atm','no_DRE_models','no_DRE_bins','beta_LW_scat','SW_REE_TOA_PM20','SW_REE_TOA_PM20_SE','LW_REE_TOA_PM20','LW_REE_TOA_PM20_SE','SW_REE_atm_PM20','LW_REE_atm_PM20','SW_REE_surf_PM20',LW_REE_surf_PM20
load('kappa_pdf.mat'); %loading the kappa pdfs from calc_kappa_and_feedback_pdf; contains kappa_old_param_x','kappa_old_param_pdf','kappa_new_param_x','kappa_new_param_pdf','x_kappa','kd_kappa','lower_CL_kappa_CMIP5','upper_CL_kappa_CMIP5','median_kappa_CMIP5','mean_kappa_CMIP5','lower_CL_kappa_old_param','upper_CL_kappa_old_param','median_kappa_old_param','mean_kappa_old_param','lower_CL_kappa_new_param','upper_CL_kappa_new_param','median_kappa_new_param','mean_kappa_new_param'
load('DRE_data_climate_models.mat'); %loading the climate model simulations of the regionally-resolved DRE for the SW and LW spectra. Contains DRE_LW_per_bin, DRE_SW_per_bin 

%basic parameters:
no_DRE_models = 4; %k=1: CESM; k=2: GISS; k=3: GEOS-Chem; k=4: WRF-Chem
no_lon = 144; %number of CESM longitude grid points
no_lat = 96; %number of CESM longitude grid points

%initializing matrices:
TOA_LW_DRE_bin = zeros(j_end,no_DRE_models,max(no_DRE_bins));
TOA_SW_DRE_bin = zeros(j_end,no_DRE_models,max(no_DRE_bins));
DRE_LW_corr_all_bins = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_SW_corr_all_bins = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_tot_corr_all_bins = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_LW_corr_norm = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_SW_corr_norm = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_tot_corr_norm = zeros(j_end,no_DRE_models,no_lon,no_lat);
DRE_LW_corr_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_LW_corr_sd = zeros(no_DRE_models,no_lon,no_lat);
DRE_SW_corr_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_SW_corr_sd = zeros(no_DRE_models,no_lon,no_lat);
DRE_tot_corr_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_tot_corr_sd = zeros(no_DRE_models,no_lon,no_lat);
DRE_LW_corr_norm_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_LW_corr_norm_sd = zeros(no_DRE_models,no_lon,no_lat);
DRE_SW_corr_norm_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_SW_corr_norm_sd = zeros(no_DRE_models,no_lon,no_lat);
DRE_tot_corr_norm_avg = zeros(no_DRE_models,no_lon,no_lat);
DRE_tot_corr_norm_sd = zeros(no_DRE_models,no_lon,no_lat);

%calculating the DRE for each model's particle bin, for the original simulation (so not corrected with the Kok et al. (2017) analysis)
for k=1:no_DRE_models %k=1: CESM; k=2: GISS; k=3: GEOS-Chem; k=4: WRF-Chem
    for p=1:no_DRE_bins(k) %cycling over the bins in each model
        TOA_LW_DRE_bin_orig(k,p) = DRE_DAOD(k,p)*LW_REE_TOA(k,p);
        TOA_SW_DRE_bin_orig(k,p) = DRE_DAOD(k,p)*SW_REE_TOA(k,p);            
    end
    TOA_LW_DRE_orig(k) = sum(TOA_LW_DRE_bin_orig(k,:));
    TOA_SW_DRE_orig(k) = sum(TOA_SW_DRE_bin_orig(k,:));
end

%performing the bootstrap, calculating the forcing at each gridbox based on
%the DRE models corrected by the constrained DAOD in each particle bin
for j=1:j_end %cycling over the i_end number of bootstraps
    for k=1:no_DRE_models %calculating the corrections to DAOD for each particle bin
        clear DRE_LW_corr_per_bin; clear DRE_SW_corr_per_bin;            
        for p=1:no_DRE_bins(k) %cycling over the bins in each model
            DAOD_corr_fact(j,k,p) = DRE_bin_AOD(k,j,p)/DRE_DAOD(k,p); %calculating the factor with which the bin's DAOD must be corrected to obtain the corrected DRE; DRE_bin_AOD is the AOD per bin obtained from the analysis in Kok et al. (NatGeo, 2017), whereas DRE_DAOD is the DAOD obtained by each of the four DRE models
            DRE_LW_corr_per_bin(p,:,:) = DAOD_corr_fact(j,k,p)*DRE_LW_per_bin(k,p,:,:); %the regionally-resolved DRE, corrected for the constraint on global DAOD versus that simulated by the model
            DRE_SW_corr_per_bin(p,:,:) = DAOD_corr_fact(j,k,p)*DRE_SW_per_bin(k,p,:,:); %the regionally-resolved DRE, corrected for the constraint on global DAOD versus that simulated by the model            
            TOA_LW_DRE_bin(j,k,p) = DRE_bin_AOD(k,j,p)*LW_REE_TOA(k,p); %the globally-averaged TOA DRE, following Kok et al. (2017)
            TOA_SW_DRE_bin(j,k,p) = DRE_bin_AOD(k,j,p)*SW_REE_TOA(k,p); %the globally-averaged TOA DRE, following Kok et al. (2017)
        end %for, correct DRE per particle bin here
        DRE_LW_corr_all_bins(j,k,:,:) = squeeze(sum(DRE_LW_corr_per_bin)); %calculating the LW DRE of all particle bins, corrected for the constraint on dust AOD
        DRE_SW_corr_all_bins(j,k,:,:) = squeeze(sum(DRE_SW_corr_per_bin)); %calculating the SW DRE of all particle bins, corrected for the constraint on dust AOD
        DRE_tot_corr_all_bins(j,k,:,:) = squeeze(sum(DRE_LW_corr_per_bin))+squeeze(sum(DRE_SW_corr_per_bin)); %calculating the SW DRE of all particle bins, corrected for the constraint on dust AOD
        DRE_LW_global(j,k) = sum(sum(squeeze(DRE_LW_corr_all_bins(j,k,:,:)).*CESM_area))/sum(sum(CESM_area)); %the LW global DRE from area-weighting the regional DRE
        DRE_SW_global(j,k) = sum(sum(squeeze(DRE_SW_corr_all_bins(j,k,:,:)).*CESM_area))/sum(sum(CESM_area)); %the SW global DRE from area-weighting the regional DRE
        DRE_LW_corr_norm(j,k,:,:) = DRE_LW_corr_all_bins(j,k,:,:)/DRE_LW_global(j,k); %calculating the LW DRE summed over all particle bins, corrected for the constraint on dust AOD, and normalized by the global LW DRE
        DRE_SW_corr_norm(j,k,:,:) = DRE_SW_corr_all_bins(j,k,:,:)/DRE_SW_global(j,k); %calculating the SW DRE summed over all particle bins, corrected for the constraint on dust AOD, and normalized by the global SW DRE
        DRE_tot_global(j,k) = DRE_LW_global(j,k)+DRE_SW_global(j,k);
        DRE_tot_corr_norm(j,k,:,:) = DRE_tot_corr_all_bins(j,k,:,:)/DRE_tot_global(j,k); %calculating the total DRE, summed over all particle bins, corrected for the constraint on dust AOD, and normalized by the global total DRE
        TOA_LW_DRE (j,k) = sum(TOA_LW_DRE_bin(j,k,:))';
        TOA_SW_DRE (j,k) = sum(TOA_SW_DRE_bin(j,k,:))';
        DCF_CESMnew_LW(j,k,:,:)=DRE_LW_corr_all_bins(j,k,:,:)*median_kappa_new_param; %calculating the DCF based on the median kappa with the new CESM parameterization
        DCF_CESMnew_SW(j,k,:,:)=DRE_SW_corr_all_bins(j,k,:,:)*median_kappa_new_param;
        DCF_CESMnew_tot(j,k,:,:)=DRE_tot_corr_all_bins(j,k,:,:)*median_kappa_new_param;
        DCF_CMIP5median_LW(j,k,:,:)=DRE_LW_corr_all_bins(j,k,:,:)*median_kappa_CMIP5; %calculating the DCF based on the median CMIP5 kappa
        DCF_CMIP5median_SW(j,k,:,:)=DRE_SW_corr_all_bins(j,k,:,:)*median_kappa_CMIP5;
        DCF_CMIP5median_tot(j,k,:,:)=DRE_tot_corr_all_bins(j,k,:,:)*median_kappa_CMIP5;
        DCF_CMIP5lowCI_LW(j,k,:,:)=DRE_LW_corr_all_bins(j,k,:,:)*lower_CL_kappa_CMIP5; %calculating the DCF based on the lower CI CMIP5 kappa
        DCF_CMIP5lowCI_SW(j,k,:,:)=DRE_SW_corr_all_bins(j,k,:,:)*lower_CL_kappa_CMIP5;
        DCF_CMIP5lowCI_tot(j,k,:,:)=DRE_tot_corr_all_bins(j,k,:,:)*lower_CL_kappa_CMIP5;
        DCF_CMIP5upCI_LW(j,k,:,:)=DRE_LW_corr_all_bins(j,k,:,:)*upper_CL_kappa_CMIP5; %calculating the DCF based on the lower CI CMIP5 kappa
        DCF_CMIP5upCI_SW(j,k,:,:)=DRE_SW_corr_all_bins(j,k,:,:)*upper_CL_kappa_CMIP5;
        DCF_CMIP5upCI_tot(j,k,:,:)=DRE_tot_corr_all_bins(j,k,:,:)*upper_CL_kappa_CMIP5;
    end %for, calculating the corrections to DAOD for each particle bin
end %for, cycling over the i_end number of bootstraps

%calculating the global DRE and its SW and LW components
DRE_tot_global = DRE_LW_global + DRE_SW_global; %the total global DRE from area-weighting the regional DRE
mean(DRE_LW_global)
mean(DRE_SW_global)
mean(DRE_tot_global)

for k=1:no_DRE_models %calculating the DRE and DCFs, corrected for the DAOD constraint, averaged over the j_end iterations, for each model
	DRE_LW_corr_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_LW_corr_all_bins(:,k,:,:))); %the LW DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_LW_corr_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_LW_corr_all_bins(:,k,:,:)));
    DRE_SW_corr_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_SW_corr_all_bins(:,k,:,:))); %the SW DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_SW_corr_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_SW_corr_all_bins(:,k,:,:)));        
    DRE_tot_corr_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_tot_corr_all_bins(:,k,:,:))); %the total DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_tot_corr_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_tot_corr_all_bins(:,k,:,:)));        
	DRE_LW_corr_norm_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_LW_corr_norm(:,k,:,:))); %the normalized LW DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_LW_corr_norm_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_LW_corr_norm(:,k,:,:)));
    DRE_SW_corr_norm_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_SW_corr_norm(:,k,:,:))); %the normalized SW DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_SW_corr_norm_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_SW_corr_norm(:,k,:,:)));        
    DRE_tot_corr_norm_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DRE_tot_corr_norm(:,k,:,:))); %the normalized total DRE, corrected using the DAOD constraint, averaged over the j_end iterations
    DRE_tot_corr_norm_sd(k,1:no_lon,1:no_lat) = squeeze(std(DRE_tot_corr_norm(:,k,:,:)));        
    DCF_CESMnew_LW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CESMnew_LW(:,k,:,:))); %the LW DCF based on CESM's kappa with the new parameterization, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CESMnew_LW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CESMnew_LW(:,k,:,:)));   
    DCF_CESMnew_SW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CESMnew_SW(:,k,:,:))); %the SW DCF based on CESM's kappa with the new parameterization, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CESMnew_SW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CESMnew_SW(:,k,:,:)));   
    DCF_CESMnew_tot_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CESMnew_tot(:,k,:,:))); %the tot DCF based on CESM's kappa with the new parameterization, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CESMnew_tot_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CESMnew_tot(:,k,:,:)));   
    DCF_CMIP5median_LW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5median_LW(:,k,:,:))); %the LW DCF based on CMIP5's median kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5median_LW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5median_LW(:,k,:,:)));   
    DCF_CMIP5median_SW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5median_SW(:,k,:,:))); %the SW DCF based on CMIP5's median kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5median_SW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5median_SW(:,k,:,:)));   
    DCF_CMIP5median_tot_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5median_tot(:,k,:,:))); %the tot DCF based on CMIP5's median kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5median_tot_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5median_tot(:,k,:,:)));   
    DCF_CMIP5lowCI_LW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5lowCI_LW(:,k,:,:))); %the LW DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5lowCI_LW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5lowCI_LW(:,k,:,:)));   
    DCF_CMIP5lowCI_SW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5lowCI_SW(:,k,:,:))); %the SW DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5lowCI_SW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5lowCI_SW(:,k,:,:)));   
    DCF_CMIP5lowCI_tot_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5lowCI_tot(:,k,:,:))); %the tot DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5lowCI_tot_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5lowCI_tot(:,k,:,:)));   
    DCF_CMIP5upCI_LW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5upCI_LW(:,k,:,:))); %the LW DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5upCI_LW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5upCI_LW(:,k,:,:)));   
    DCF_CMIP5upCI_SW_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5upCI_SW(:,k,:,:))); %the SW DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5upCI_SW_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5upCI_SW(:,k,:,:)));   
    DCF_CMIP5upCI_tot_avg(k,1:no_lon,1:no_lat) = squeeze(mean(DCF_CMIP5upCI_tot(:,k,:,:))); %the tot DCF based on CMIP5's low CI kappa, using DRE corrected using the DAOD constraint, averaged over the j_end iterations
    DCF_CMIP5upCI_tot_sd(k,1:no_lon,1:no_lat) = squeeze(std(DCF_CMIP5upCI_tot(:,k,:,:)));   
end %for, calculating the DRE, corrected for the DAOD constraint, averaged over the j_end iterations

%calculating the regional DRE, DCF enhancement, and DCF for CESM and CMIP5,
%averaged over all DRE models. First, reshaping the arrays so that the
%median and CI can be calculated at each grip point in the next step
DRE_regional_tot_allmodels = reshape(DRE_tot_corr_all_bins,[j_end*no_DRE_models,no_lon,no_lat]);
DRE_regional_LW_allmodels = reshape(DRE_LW_corr_all_bins,[j_end*no_DRE_models,no_lon,no_lat]);
DRE_regional_SW_allmodels = reshape(DRE_SW_corr_all_bins,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_enhancement_tot_allmodels = reshape(DRE_tot_corr_norm,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_enhancement_LW_allmodels = reshape(DRE_LW_corr_norm,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_enhancement_SW_allmodels = reshape(DRE_SW_corr_norm,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CESMnew_tot_allmodels = reshape(DCF_CESMnew_tot,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CESMnew_LW_allmodels = reshape(DCF_CESMnew_LW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CESMnew_SW_allmodels = reshape(DCF_CESMnew_SW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5median_tot_allmodels = reshape(DCF_CMIP5median_tot,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5median_LW_allmodels = reshape(DCF_CMIP5median_LW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5median_SW_allmodels = reshape(DCF_CMIP5median_SW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5lowCI_tot_allmodels = reshape(DCF_CMIP5lowCI_tot,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5lowCI_LW_allmodels = reshape(DCF_CMIP5lowCI_LW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5lowCI_SW_allmodels = reshape(DCF_CMIP5lowCI_SW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5upCI_tot_allmodels = reshape(DCF_CMIP5upCI_tot,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5upCI_LW_allmodels = reshape(DCF_CMIP5upCI_LW,[j_end*no_DRE_models,no_lon,no_lat]);
DCF_CMIP5upCI_SW_allmodels = reshape(DCF_CMIP5upCI_SW,[j_end*no_DRE_models,no_lon,no_lat]);
%calculating the median and CI at each grip point
for i=1:no_lon %cycling over longitude coordinates
    for j=1:no_lat %cycling over latitude coordinates
        %calculating regional DRE median and CI
        A=sort(DRE_regional_tot_allmodels(:,i,j));
        DRE_regional_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DRE_regional_tot_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DRE_regional_tot_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DRE_regional_LW_allmodels(:,i,j));
        DRE_regional_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DRE_regional_LW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DRE_regional_LW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DRE_regional_SW_allmodels(:,i,j));
        DRE_regional_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DRE_regional_SW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DRE_regional_SW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        %calculing regional DCF enhancement and CI
        A=sort(DCF_enhancement_tot_allmodels(:,i,j));
        DCF_enhancement_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_enhancement_tot_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_enhancement_tot_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DCF_enhancement_LW_allmodels(:,i,j));
        DCF_enhancement_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_enhancement_LW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_enhancement_LW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DCF_enhancement_SW_allmodels(:,i,j));
        DCF_enhancement_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_enhancement_SW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_enhancement_SW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        %calculating regional DCF with new CESM parameterization for kappa
        A=sort(DCF_CESMnew_tot_allmodels(:,i,j));
        DCF_CESMnew_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_CESMnew_tot_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_CESMnew_tot_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DCF_CESMnew_LW_allmodels(:,i,j));
        DCF_CESMnew_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_CESMnew_LW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_CESMnew_LW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        A=sort(DCF_CESMnew_SW_allmodels(:,i,j));
        DCF_CESMnew_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        DCF_CESMnew_SW_neg_2sigma(i,j) = A(max(1,(floor(0.5*(1+erf(-2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        DCF_CESMnew_SW_pos_2sigma(i,j) = A(max(1,(ceil(0.5*(1+erf(2/sqrt(2)))*j_end*no_DRE_models)))); %lower uncertainty value at -2 sigma
        %calculating regional DCF with CMIP55 results for kappa
        A=sort(DCF_CMIP5median_tot_allmodels(:,i,j));
        DCF_CMIP5median_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5median_LW_allmodels(:,i,j));
        DCF_CMIP5median_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5median_SW_allmodels(:,i,j));
        DCF_CMIP5median_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5lowCI_tot_allmodels(:,i,j));
        DCF_CMIP5lowCI_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5lowCI_LW_allmodels(:,i,j));
        DCF_CMIP5lowCI_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5lowCI_SW_allmodels(:,i,j));
        DCF_CMIP5lowCI_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5upCI_tot_allmodels(:,i,j));
        DCF_CMIP5upCI_tot_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5upCI_LW_allmodels(:,i,j));
        DCF_CMIP5upCI_LW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
        A=sort(DCF_CMIP5upCI_SW_allmodels(:,i,j));
        DCF_CMIP5upCI_SW_median(i,j) = A(round(0.5*j_end*no_DRE_models));
    end %for, cycling over latitude coordinates
end %for, cycling over longitude coordinates

sum(sum(abs(DCF_CESMnew_tot_median).*CESM_area))/sum(sum(CESM_area))
sum(sum(abs(DCF_CESMnew_tot_neg_2sigma).*CESM_area))/sum(sum(CESM_area))
sum(sum(abs(DCF_CESMnew_tot_pos_2sigma).*CESM_area))/sum(sum(CESM_area))

sum(sum(abs(DCF_CMIP5median_tot_median).*CESM_area))/sum(sum(CESM_area))
sum(sum(abs(DCF_CMIP5lowCI_tot_median).*CESM_area))/sum(sum(CESM_area))
sum(sum(abs(DCF_CMIP5upCI_tot_median).*CESM_area))/sum(sum(CESM_area))

plot_regional_DCF_results;

1;